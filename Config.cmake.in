@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

# Components that were built into this installation
set(tanh_AVAILABLE_COMPONENTS @TANH_BUILT_COMPONENTS@)

# Check if user requested specific components
if(tanh_FIND_COMPONENTS)
    # Validate each requested component
    foreach(comp ${tanh_FIND_COMPONENTS})
        if(NOT comp IN_LIST tanh_AVAILABLE_COMPONENTS)
            set(tanh_FOUND FALSE)
            set(tanh_NOT_FOUND_MESSAGE "Component '${comp}' not found. Available components: ${tanh_AVAILABLE_COMPONENTS}")
            return()
        endif()
    endforeach()
    
    # Check for component dependencies and auto-add them
    set(REQUIRED_COMPONENTS ${tanh_FIND_COMPONENTS})
    
    # State, DSP, Advanced and Processing all need Core
    if("State" IN_LIST tanh_FIND_COMPONENTS OR "DSP" IN_LIST tanh_FIND_COMPONENTS OR 
       "Advanced" IN_LIST tanh_FIND_COMPONENTS OR "Processing" IN_LIST tanh_FIND_COMPONENTS)
        if(NOT "Core" IN_LIST REQUIRED_COMPONENTS)
            list(APPEND REQUIRED_COMPONENTS Core)
        endif()
    endif()
    
    # State needs nlohmann_json
    if("State" IN_LIST tanh_FIND_COMPONENTS)
        find_dependency(nlohmann_json)
    endif()
    
else()
    # No specific components requested, include all available
    set(REQUIRED_COMPONENTS ${tanh_AVAILABLE_COMPONENTS})
    
    # State needs nlohmann_json
    if("State" IN_LIST tanh_AVAILABLE_COMPONENTS)
        find_dependency(nlohmann_json)
    endif()
endif()

# Include the targets file (this creates the imported targets)
include("${CMAKE_CURRENT_LIST_DIR}/tanhTargets.cmake")

# Set component feature flags
if(TARGET tanh::tanh_state)
    target_compile_definitions(tanh::tanh_state INTERFACE TANH_STATE_ENABLED)
endif()

if(TARGET tanh::tanh_dsp)
    target_compile_definitions(tanh::tanh_dsp INTERFACE TANH_DSP_ENABLED)
endif()

# Verify all requested components are available as targets
foreach(comp ${tanh_FIND_COMPONENTS})
    if(NOT TARGET tanh::${comp})
        set(tanh_FOUND FALSE)
        set(tanh_NOT_FOUND_MESSAGE "Target tanh::${comp} not available")
        return()
    endif()
    
    # Mark individual component as found
    set(tanh_${comp}_FOUND TRUE)
endforeach()

set(tanh_FOUND TRUE)
set(TANH_VERSION @PROJECT_VERSION_FULL@)